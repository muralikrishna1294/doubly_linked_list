/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include <stdlib.h>
struct node{
    
    int data;
    struct node *prev;
    struct node *next;
    
};
// 1 2 3
struct node *head =NULL;

struct node* create(int data){
            struct node* new        =(struct node *)malloc(sizeof(struct node));    
             new->data =data;
             new->prev =NULL;
             new->next =NULL;
             return new;

}
void insert(int data){
    
            struct node* new    =create(data);
            if(head ==NULL){
                       head=new;
            }else{
                
                
                new->next =head;
                head->prev =new;
                head =new;
                
            }
            
}

void display(){
    struct node* temp =head;
    while(temp!=NULL){
        
        printf(" %d",temp->data);
        temp =temp->next;
    }
    printf("\n");
    
}
//1 2 3 4
void add_middle_node(){
    
    
               struct node* mid=create(100);
               struct node* slow = head;
               struct node* fast =head->next;
               while(fast!=NULL && fast->next!=NULL){
                   
                   slow=slow->next;
                   fast=fast->next->next;
                   
               }
                mid->next=slow->next;
                slow->next=mid;
                mid->prev =slow;
               
}        
     
      
void delete_middle_node(){
    
        struct node* slow =head;
        struct node* fast =head->next;
        struct node* prev_node =NULL;
        
        while(fast!=NULL && fast->next!=NULL){
            
             prev_node =slow;
            slow= slow->next;
            fast=fast->next->next;
            
        }
   
      prev_node->next=slow->next;
        free(slow);
       
    
}

int main()
{
   
     insert(5);
     insert(15);
     insert(25);
     insert(20);
     insert(40);
     display();
     add_middle_node();
     display();
     add_middle_node();
     display();
     delete_middle_node();
     display();
     delete_middle_node();
     display();
     delete_middle_node();
     display();
    return 0;
}
